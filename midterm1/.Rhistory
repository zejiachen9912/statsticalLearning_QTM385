rm(list=ls(all=TRUE))
setwd("/Users/zejiachen/Desktop/Sspring 2022/Statstical Learning/midterm1")
df_train <- read.csv("midterm1_train.csv")
df_test <- read.csv("midterm1_testProto.csv")
head(df_train)
View(df_train)
str(df_train)
df_train[1,1]
df_train[1,"data_channel_is_lifestyle"]
df_train$shares = log(df_train$shares)
df_test$shares = log(df_test$shares)
df_train[1,"data_channel_is_lifestyle"]
str(df_train)
nrow(df_train)
df_train$data_channel_is_viral = 0
View(df_train)
df_train$data_channel_is_viral = I(c())
df_train[['data_channel_is_viral']] = I(c())
df_train$data_channel_is_viral = data_channel_is_lifestyle
df_train$data_channel_is_viral = df_train$data_channel_is_lifestyle
df_train[1,"data_channel_is_lifestyle"]
str(df_train)
for (i in 1:nrow(df_train)){
if (df_train[i, "data_channel_is_lifestyle"] == 0 &
df_train[i, "data_channel_is_entertainment"] == 0 &
df_train[i, "data_channel_is_bus"] == 0 &
df_train[i, "data_channel_is_socmed"] == 0 &
df_train[i, "data_channel_is_tech"] == 0 &
df_train[i, "data_channel_is_world"] == 0){
df_train[i, "data_channel_is_viral"] = 1
} else{
df_train[i, "data_channel_is_viral"] = 0
}
}
df_train[1,"data_channel_is_lifestyle"]
str(df_train)
sum(df_train$data_channel_is_viral)
sum(df_train$data_channel_is_viral)
sum(df_train$data_channel_is_lifestyle)
colnames(df_train)
df_train <- df_train[, -c("is_weekend", "LDA_04")]
df_train <- df_train[, -"is_weekend"]
df_train <- df_train[, "is_weekend"]
library(ggplot2)
library(data.table)
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning = FALSE, fig.width = 16/2, fig.height = 9/2, tidy.opts=list(width.cutoff=60), tidy=TRUE)
rm(list=ls(all=TRUE))
setwd("/Users/zejiachen/Desktop/Sspring 2022/Statstical Learning/midterm1")
df_train <- read.csv("midterm1_train.csv")
df_test <- read.csv("midterm1_testProto.csv")
# take of log of `share`
df_train$shares = log(df_train$shares)
df_test$shares = log(df_test$shares)
# adding the `viral content category` variable
df_train$data_channel_is_viral = df_train$data_channel_is_lifestyle
for (i in 1:nrow(df_train)){
if (df_train[i, "data_channel_is_lifestyle"] == 0 &
df_train[i, "data_channel_is_entertainment"] == 0 &
df_train[i, "data_channel_is_bus"] == 0 &
df_train[i, "data_channel_is_socmed"] == 0 &
df_train[i, "data_channel_is_tech"] == 0 &
df_train[i, "data_channel_is_world"] == 0){
df_train[i, "data_channel_is_viral"] = 1
} else{
df_train[i, "data_channel_is_viral"] = 0
}
}
# dropping variables that might cause collinearity issue
df_train <- subset(df_train, select = -c("is_weekend", "LDA_04"))
# dropping variables that might cause collinearity issue
df_train <- subset(df_train, select = -c(is_weekend, LDA_04))
colnames(df_train)
colnames(df_train)
lm_fit <- lm(shares ~ ., data = df_train)
lm_fit <- lm(shares ~ ., data = df_train)
lm_fit <- lm(shares ~ ., data = df_train)
